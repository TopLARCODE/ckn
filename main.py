
import logging
from random import randint
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.message import ContentTypes
from aiogram.types.message import ContentType
from aiogram.types import InlineKeyboardMarkup, InlineKeybordButton
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from db import Database
import random
import datetime, threading, time
from datetime import timedelta
from pyqiwip2p import QiwiP2P
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import requests
    
now = datetime.datetime.now()
TOKEN = "5485987229:AAGdWZsT48YrlRcbhXr1HaPd6zh8DE1Xf4Y"
ADMIN_ID = "1764135502"
savedid = 1
bb = 1
b = 1
hello = 1
a = 1
cc = 1
aa = 1   
asdas = 1
lower = 1
sdsa = 1
sfsd = 1
moneyz = 1
teas = 1
nickfury = 1
nickfury2 = 1
nickfury3 = 1

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
now = datetime.datetime.now()
p2p = QiwiP2P(auth_key="eyJ2ZXJzaW9uIjoiUDJQIiwiZGF0YSI6eyJwYXlpbl9tZXJjaGFudF9zaXRlX3VpZCI6IjJkdmVwMS0wMCIsInVzZXJfaWQiOiI3OTE5ODIwNTUzOSIsInNlY3JldCI6IjYzNTRmZDc0MDZkY2E4ZjZhYTE1YWJmYjdlNGJmYzYxODc2OWM2OTgxZDAzODYzYWJkMzM2Mzg1NmExYzI5MTIifX0=")

try:
    print("Trying run server...")
    dp = Dispatcher(bot)
    print('Running server has no errors!\n')
except Exception as e:
    print('Error run server, info ->\n' + str(e))
    exit

db = Database('database.db')


mainMenu = InlineKeyboardMarkup(row_width=1)
btnAdd = InlineKeyboardButton(text="‚§µÔ∏è –î–æ–±–∞–≤–∏—Ç—å –í –ß–∞—Ç", url="https://t.me/CKNgame_bot?startgroup=true")
mainMenu.insert(btnAdd)
mainMenu2 = InlineKeyboardMarkup(row_width=2)
btnAdd1 = InlineKeyboardButton(text="üßÜ  –°–æ–±—Ä–∞—Ç—å –∫–æ—Ä–º", callback_data="btnRandom")
btnAdd2 = InlineKeyboardButton(text="‚¨ÜÔ∏è  –ö—É–ø–∏—Ç—å –∑–∞–≤–æ–¥", callback_data="btnRandom2")
mainMenu2.insert(btnAdd1)
mainMenu2.insert(btnAdd2)
    
def seturl(url):
    global mainMenus
    mainMenus = InlineKeyboardMarkup(row_width=1)
    btnAdda = InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å", url=url)
    mainMenus.insert(btnAdda)

@dp.message_handler(text=['–î–æ–Ω–∞—Ç'])
async def buy(message: types.Message):
    global bill
    global nickfury
    global nickfury2
    global nickfury3
    nickfury = message.from_user.id
    price = 5
    lifetime = 5
    comment = str(message.from_user.id) + "_" + str(random.randint(1000,9999))
    bill = p2p.bill(amount=price, lifetime=lifetime, comment=comment)
    link_oplata = bill.pay_url
    seturl(link_oplata)
    nickfury2 = db.get_nickname(nickfury)
    nickfury3 = nickfury
    await message.answer("[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ü—Ä–∏–≤–µ—Ç üëã\n\nüí≥ C—É–º–º–∞: `" + str(price) + "‚ÇΩ`\n‚åöÔ∏è –î–µ–π—Å—Ç–≤–∏–µ: `5 –º–∏–Ω—É—Ç`\n–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá", reply_markup=mainMenus, parse_mode="Markdown")
    x = threading.Thread(target=functionoplata, args=(message,))
    x.start()
def functionoplata(message):
    oplata_time = datetime.datetime.now()
    datetime_delta = oplata_time + timedelta(minutes=5)
    while True:
        time.sleep(3)
        status = p2p.check(bill_id=bill.bill_id).status 
        if status == 'PAID':
            requests.get("https://api.telegram.org/bot" + TOKEN + "/sendMessage?chat_id=" + str(nickfury) + "&text=[" + str(nickfury2) + "](tg://user?id=" + str(nickfury) + "), –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É üß∫&parse_mode=Markdown")
            break
        elif datetime.datetime.now() > datetime_delta:
            requests.get("https://api.telegram.org/bot" + TOKEN + "/sendMessage?chat_id=" + str(nickfury) + "&text=[" + str(nickfury2) + "](tg://user?id=" + str(nickfury) + "), –°—á—ë—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω üìí&parse_mode=Markdown")
            break
    
@dp.message_handler(commands=['info'])
async def start(message: types.Message):
    if str(message.from_user.id) == ADMIN_ID:
        teas = message.text
        teas = teas.replace("  ", '')
        teas = teas.replace("/info ", '')
        try:
            text = db.get_info(teas)
            await bot.send_message(message.chat.id, text, parse_mode= 'Markdown')
        except:
            await bot.send_message(message.chat.id, "Syntax error.\nCorrect: `/info {id}`", parse_mode= 'Markdown')
    else:
        await bot.send_message(message.chat.id, "Oops!\nYour account don't have administator rights.", parse_mode= 'Markdown')

             
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if(not db.user_exists(message.from_user.id)):
        db.add_user(message.from_user.id)
        db.set_real(message.from_user.id, message.from_user.first_name)
        db.set_nickname(message.from_user.id, "–ò–≥—Ä–æ–∫")
        db.set_signup(message.from_user.id, "done")
    if message.chat.type == 'private':
        await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ü—Ä–∏–≤–µ—Ç üëã\n–ú–µ—á—Ç–∞–ª –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ TG –±–æ—Ç–∞? ü§ë\n\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É üëá ", parse_mode= 'Markdown', reply_markup=mainMenu)
    else:
        await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ü—Ä–∏–≤–µ—Ç üëã", parse_mode= 'Markdown')
@dp.message_handler(text=['–ë', '–±'])
async def start(message: types.Message):
    if(not db.user_exists(message.from_user.id)):
        db.add_user(message.from_user.id)
        db.set_real(message.from_user.id, message.from_user.first_name)
        db.set_nickname(message.from_user.id, "–ò–≥—Ä–æ–∫")
        db.set_signup(message.from_user.id, "done")
    db.set_real(message.from_user.id, message.from_user.first_name)
    math = randint(0,100)
    if math <= 40:
        db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) - 1)
    else:
        db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) + 1)
    if message.chat.type == 'private':
        await bot.send_message(message.from_user.id, "üë´ [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + ")!\n‚îú üí∞ –ú–æ–Ω–µ—Ç: *" + db.get_money(message.from_user.id) + "‚ÇΩ*\n‚îú üßÜ –ö–æ—Ä–º: *" + db.get_korm(message.from_user.id) + "*\n‚îú üè¶ –ë–∞–Ω–∫: *" + db.get_bank(message.from_user.id) + "‚ÇΩ*".format(message.from_user), parse_mode= 'Markdown')
    else:
        await bot.send_message(message.chat.id, "üë´ [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + ")!\n‚îú üí∞ –ú–æ–Ω–µ—Ç: *" + db.get_money(message.from_user.id) + "‚ÇΩ*\n‚îú üßÜ –ö–æ—Ä–º: *" + db.get_korm(message.from_user.id) + "*\n‚îú üè¶ –ë–∞–Ω–∫: *" + db.get_bank(message.from_user.id) + "‚ÇΩ*".format(message.from_user), parse_mode= 'Markdown')



    @dp.message_handler()
    async def bot_message(message: types.Message):
        if(not db.user_exists(message.from_user.id)):
            db.add_user(message.from_user.id)
            db.set_real(message.from_user.id, message.from_user.first_name)
            db.set_nickname(message.from_user.id, "–ò–≥—Ä–æ–∫")
            db.set_signup(message.from_user.id, "done")
        #print(message)
        db.set_real(message.from_user.id, message.from_user.first_name)
        math = randint(0, 100)
        if math <= 40:
            db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) - 1)
        else:
            db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) + 1)
        check = message.text.lower()
        global sdsa
        global moneyz
        global teas
        if sdsa == 10:
            if str(message.from_user.id) == ADMIN_ID:
                try:
                    test = int(message.text) - 1
                    db.set_moneyz(teas, check)
                    await bot.send_message(message.chat.id, "Nice, money has been setted.\n" + str(moneyz) + " -> " + str(db.get_moneyz(teas)) + "", parse_mode= 'Markdown')
                    sdsa = 1
                except:
                    await bot.send_message(message.chat.id, "Failed set `" + message.text + "`\nDon't allowed set VARCHAR balance", parse_mode= 'Markdown')
                    sdsa = 1
            else:
                pass
        if check.find("/grant") == 0:
            if str(message.from_user.id) == ADMIN_ID:
                teas = message.text
                teas = teas.replace("  ", '')
                teas = teas.replace("/grant ", '')
                
                moneyz = db.get_moneyz(teas)
                await bot.send_message(message.chat.id, "Great, now send sum which need add.\nPlayer value: " + moneyz + ".", parse_mode= 'Markdown')
                sdsa = 10
            else:
                await bot.send_message(message.chat.id, "Oops!\nYour account don't have administator rights.", parse_mode= 'Markdown')
        if check.find("–∫–∞–∑–∏–Ω–æ") == 0:
            check = check.replace("–∫–∞–∑–∏–Ω–æ ","")
            if check.find("  "):
                check = check.replace("  ", " ")
            check = check.replace(".","")
            checks = check
            checks = str(check)
            if checks.find("e") != -1:
                check = "%d" % float(check)
                check = str(check)
                z = str(check)
                z = z.replace(".0", "")
                check = str(z)
            global lower
            global sfsd
            try:
                if int(check) <= 9:
                    lower = 10
                else:
                    lower = 1
            except:
                    sfsd = 10
            if lower == 10:
                await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 10‚ÇΩ üòü", parse_mode= 'Markdown')
            else:
                if sfsd == 10:
                    await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–∏—Å–ª–æ üòü", parse_mode= 'Markdown')
                else:
                        if int(db.get_money(message.from_user.id)) - int(check) <= -1:
                            if message.chat.type == 'private':
                                await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üòü", parse_mode= 'Markdown')
                            else:
                                await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üòü", parse_mode= 'Markdown')
                        else:
                            save = check
                            math = randint(0, 200)
                            a = int(check) / 100
                            if math <= 25 or math == 25:
                                checks = a * 75
                                money = int(db.get_money(message.from_user.id)) - int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ *0.25x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* üòï"
                            elif math <= 50 or math == 50:
                                checks = a * 50
                                money = int(db.get_money(message.from_user.id)) - int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ *0.50x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* üòï"
                            elif math <= 75 or math == 75:
                                checks = a * 25
                                money = int(db.get_money(message.from_user.id)) - int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ *0.75x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* üòï"
                            elif math <= 100:
                                checks = a * 100
                                money = int(db.get_money(message.from_user.id))
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å *1.0x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* üôÇ"
                            elif math >= 100 and math <= 125:
                                checks = a * 100
                                money = int(db.get_money(message.from_user.id))
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å *1.0x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* üôÇ"
                            elif math >= 125 and math <= 150:
                                checks = a * 125
                                money = (int(db.get_money(message.from_user.id)) - int(save)) + int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ *1.25x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* ü§ë"
                            elif math >= 150 and math <= 175:
                                checks = a * 150
                                money = (int(db.get_money(message.from_user.id)) - int(save)) + int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ *1.50x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* ü§ë"
                            elif math >= 175 and math <= 185:
                                checks = a * 175
                                money = (int(db.get_money(message.from_user.id)) - int(save)) + int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ *1.75x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* ü§ë"
                            elif math >= 185 and math <= 201:
                                checks = a * 200
                                money = (int(db.get_money(message.from_user.id)) - int(save)) + int(checks)
                                db.set_money(message.from_user.id, money)
                                checks = int(checks)
                                checks = str(checks).replace(".0", "")
                                checks = int(checks)
                                text = "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ *2.0x*\n*" + str(save) + "‚ÇΩ* ‚Üí *" + str(checks) + "‚ÇΩ* ü§ë"
                            if message.chat.type == 'private':
                                await bot.send_message(message.from_user.id, text, parse_mode= 'Markdown')
                            else:
                                await bot.send_message(message.chat.id, text, parse_mode= 'Markdown')
        elif check.find("—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫") == 0:
            check = check.replace("  "," ")
            if check == "—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫" or check == "—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫ ":   

                if message.chat.type == 'private':
                    await bot.send_message(message.from_user.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: `–°–º–µ–Ω–∏—Ç—å –ù–∏–∫ {–Ω–∏–∫}`.\n–¢–∞–∫–∂–µ, –≤ –Ω–∏–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode= 'Markdown')
                else:
                    await bot.send_message(message.chat.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: `–°–º–µ–Ω–∏—Ç—å –ù–∏–∫ {–Ω–∏–∫}`.\n–¢–∞–∫–∂–µ, –≤ –Ω–∏–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode= 'Markdown')
            else:
                nick = check.replace("—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫ ", "")
                if len(nick) <= 4:
                    if message.chat.type == 'private':
                        await bot.send_message(message.from_user.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode= 'Markdown')
                    else:
                        await bot.send_message(message.chat.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode= 'Markdown')
                else:
                    db.set_nickname(message.from_user.id, nick)
                    if message.chat.type == 'private':
                        await bot.send_message(message.from_user.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í–∞—à –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω—ë–Ω –Ω–∞ ¬´`" + str(nick) + "`¬ª", parse_mode= 'Markdown')
                    else:
                        await bot.send_message(message.chat.id, "‚úèÔ∏è [" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –í–∞—à –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω—ë–Ω –Ω–∞ ¬´`" + str(nick) + "`¬ª", parse_mode= 'Markdown')
        elif check.find("–¥–∞—Ç—å") == 0:
            check = check.replace("  "," ")
            to = message.reply_to_message.from_user.id
            check = check.replace("–¥–∞—Ç—å ", "")
            checks = check
            checks = str(check)
            if checks.find("e") != -1:
                check = "%d" % float(check)
                check = str(check)
                z = str(check)
                z = z.replace(".0", "")  
                check = str(z)
            savedz = check
            if int(check) <= 9:
                 if message.chat.type == 'private':
                    await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–≤–æ–¥ 10‚ÇΩ üòü", parse_mode= 'Markdown')
                 else:
                    await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–≤–æ–¥ 10‚ÇΩ üòü", parse_mode= 'Markdown')
            else:
               if int(db.get_money(message.from_user.id)) - int(check) <= -1:
                    if message.chat.type == 'private':
                        await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üòü", parse_mode= 'Markdown')
                    else:
                        await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üòü", parse_mode= 'Markdown')
               else:
                    money = (int(db.get_money(message.from_user.id)) - int(check))
                    moneyto = (int(db.get_money(to)) + int(check))
                    db.set_money(message.from_user.id, money)
                    db.set_money(to, moneyto)
                    if message.chat.type == 'private':
                        await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ü–µ—Ä–µ–¥–∞–Ω–æ *" + savedz + "‚ÇΩ* –∏–≥—Ä–æ–∫—É [" + db.get_nickname(to) +"](tg://user?id=" + str(to) + ") üòÉ", parse_mode= 'Markdown')
                    else:
                        await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ü–µ—Ä–µ–¥–∞–Ω–æ *" + savedz + "‚ÇΩ* –∏–≥—Ä–æ–∫—É [" + db.get_nickname(to) +"](tg://user?id=" + str(to) + ") üòÉ", parse_mode= 'Markdown')
        elif check.find("—Ü–∫–Ω –∫—Ç–æ") == 0:
            check = check.replace("  "," ")
            check = check.replace("—Ü–∫–Ω –∫—Ç–æ ", "")
            choice = ['üé± –®–∞—Ä –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ ', 'üîÆ –®–∞—Ä –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ ', 'ü§î –Ø –¥—É–º–∞—é, —á—Ç–æ ', 'üî≠ –ó–≤—ë–∑–¥—ã –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ ']
            choice = random.choice(choice)
            if message.chat.type == 'private':
                await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –Ø –Ω–µ –º–æ–≥—É —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö üòü", parse_mode= 'Markdown')
            else:
                await bot.send_message(message.chat.id, choice + "[" + message.from_user.first_name +"](tg://user?id=" + str(message.from_user.id) + ") " + check, parse_mode= 'Markdown')
        elif check.find("–ø–æ–º–æ—â—å") == 0:
                        if message.chat.type == 'private':
                            await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ö–æ–º–∞–Ω–¥—ã:\nüí∞ –ë/–ë–∞–ª–∞–Ω—Å\nüé∞ –ö–∞–∑–∏–Ω–æ {—Å—Ç–∞–≤–∫–∞}\nü§ù –î–∞—Ç—å {—Å—É–º–º–∞}\nüè≠ –ú–æ–π –∑–∞–≤–æ–¥\nü§î –¶–∫–Ω –∫—Ç–æ {–≤–æ–ø—Ä–æ—Å}\nüë® –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ {–Ω–∏–∫}\n\n–ü–æ–∫–∞-—á—Ç–æ —ç—Ç–æ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!\n–ö–∞–Ω–∞–ª: @FrostyNew üò∫", parse_mode= 'Markdown')
                        else:
                            await bot.send_message(message.chat.id,  "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ö–æ–º–∞–Ω–¥—ã:\nüí∞ –ë/–ë–∞–ª–∞–Ω—Å\nüé∞ –ö–∞–∑–∏–Ω–æ {—Å—Ç–∞–≤–∫–∞}\nü§ù –î–∞—Ç—å {—Å—É–º–º–∞}\nüè≠ –ú–æ–π –∑–∞–≤–æ–¥\nü§î –¶–∫–Ω –∫—Ç–æ {–≤–æ–ø—Ä–æ—Å}\nüë® –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ {–Ω–∏–∫}\n\n–ü–æ–∫–∞-—á—Ç–æ —ç—Ç–æ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!\n–ö–∞–Ω–∞–ª: @FrostyNew üò∫", parse_mode= 'Markdown')




@dp.message_handler(text=['–º–æ—è —Ñ–µ—Ä–º–∞', '–ú–æ—è –§–µ—Ä–º–∞', '–ú–æ—è —Ñ–µ—Ä–º–∞', '–º–æ—è –§–µ—Ä–º–∞', '–º–æ–π –∑–∞–≤–æ–¥', '–ú–æ–π –ó–∞–≤–æ–¥', '–ú–æ–π –∑–∞–≤–æ–¥', '–º–æ–π –ó–∞–≤–æ–¥'])
async def start(message: types.Message):
    global ofzzz
    if(not db.user_exists(message.from_user.id)):   
        db.add_user(message.from_user.id)
        db.set_real(message.from_user.id, message.from_user.first_name)
        db.set_nickname(message.from_user.id, "–ò–≥—Ä–æ–∫")
        db.set_signup(message.from_user.id, "done")
    db.set_real(message.from_user.id, message.from_user.first_name)
    math = randint(0,100)
    if math <= 40:
        db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) - 1)
    else:
        db.set_kurs(ADMIN_ID, int(db.get_kurs(ADMIN_ID)) + 1)
    if db.get_bbb(message.from_user.id) == "yes":
        if message.chat.type == 'private':
            if db.get_nickname(message.from_user.id) == "–ò–≥—Ä–æ–∫":
                nick = "–ò–≥—Ä–æ–∫'–∞"
            else:
                nick = db.get_nickname(message.from_user.id)
            global savedid
            global bb
            global a
            global cc
            global b
            global hello
            global asdas
            savedid = message.chat.id
            a = db.get_time(message.from_user.id)
            b = a[-2] + a[-1]
            hello = a[-4] + a[-3]
            aa = datetime.datetime.today().strftime("%d%H")
            bb = aa[-2] + aa[-1]
            cc = aa[-4] + aa[-3]
            if int(cc) - int(hello) != 0:
                
                asdas = 5
            else:
                if int(bb) - int(b) == 0:

                    asdas = 0
                if int(bb) - int(b) == 1:

                    asdas = 1
                elif int(bb) - int(b) == 2:
                    
                    asdas = 2
                elif int(bb) - int(b) == 3:
                    
                    asdas = 3
                elif int(bb) - int(b) == 4:
                    
                    asdas = 4
                elif int(bb) - int(b) == 5:
                    
                    asdas = 5
                elif int(bb) - int(b) >= 5:
                    
                    asdas = 5
            offz = int(db.get_kormlvl(message.from_user.id)) * 4.2321 * 2
            offic = int(offz) * int(asdas)
            ofzzz = (int(offic)) * int(db.get_kurs(ADMIN_ID))
            if int(offic) == 0:
                ofzzz = 0
            await bot.send_message(message.from_user.id, "üè≠ –ó–∞–≤–æ–¥—ã [" + str(nick) +"](tg://user?id=" + str(message.from_user.id) + ")\n‚îú üí∞ –ü—Ä–∏–±—ã–ª—å: *" + str(offz) + "*‡∏ø/—á–∞—Å\n‚îú üè≠ –ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ: *" + str(db.get_kormlvl(message.from_user.id)) + "* —à—Ç / *500* —à—Ç\n‚îú ‚åöÔ∏è –ó–∞–ø–æ–ª–Ω–µ–Ω–æ: *" + str(asdas) + "* —á–∞—Å–æ–≤ / *5* —á–∞—Å–æ–≤\n‚îú üìù –ù–∞ –°—á–µ—Ç—É: *" + str(ofzzz) + "‚ÇΩ* / *" + str(offic) + "‡∏ø*".format(message.from_user), parse_mode= 'Markdown', reply_markup=mainMenu2)
        else:
            if db.get_nickname(message.from_user.id) == "–ò–≥—Ä–æ–∫":
                nick = "–ò–≥—Ä–æ–∫'–∞"
            else:
                nick = db.get_nickname(message.from_user.id)
            savedid = message.chat.id
            a = db.get_time(message.from_user.id)
            b = a[-2] + a[-1]
            hello = a[-4] + a[-3]
            aa = datetime.datetime.today().strftime("%d%H")
            bb = aa[-2] + aa[-1]
            cc = aa[-4] + aa[-3]
            savedid = message.chat.id
            if int(cc) - int(hello) != 0:
                
                asdas = 5
            else:
                if int(bb) - int(b) == 0:

                    asdas = 0
                if int(bb) - int(b) == 1:

                    asdas = 1
                elif int(bb) - int(b) == 2:
                    
                    asdas = 2
                elif int(bb) - int(b) == 3:
                    
                    asdas = 3
                elif int(bb) - int(b) == 4:
                    
                    asdas = 4
                elif int(bb) - int(b) == 5:
                    
                    asdas = 5
                elif int(bb) - int(b) >= 5:
                    
                    asdas = 5
            offz = int(db.get_kormlvl(message.from_user.id)) * 4.2321 * 2
            offic = int(offz) * int(asdas)
            ofzzz = (int(offic)) * int(db.get_kurs(ADMIN_ID))
            if int(offic) == 0:
                ofzzz = 0
            await bot.send_message(message.chat.id, "üè≠ –ó–∞–≤–æ–¥—ã [" + str(nick) +"](tg://user?id=" + str(message.from_user.id) + ")\n‚îú üí∞ –ü—Ä–∏–±—ã–ª—å: *" + str(offz) + "*‡∏ø/—á–∞—Å\n‚îú üè≠ –ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ: *" + str(db.get_kormlvl(message.from_user.id)) + "* —à—Ç / *500* —à—Ç\n‚îú ‚åöÔ∏è –ó–∞–ø–æ–ª–Ω–µ–Ω–æ: *" + str(asdas) + "* —á–∞—Å–æ–≤ / *5* —á–∞—Å–æ–≤\n‚îú üìù –ù–∞ –°—á–µ—Ç—É: *" + str(ofzzz) + "‚ÇΩ* / *" + str(offic) + "‡∏ø*".format(message.from_user), parse_mode= 'Markdown', reply_markup=mainMenu2)
    else:
        if int(db.get_money(message.from_user.id)) - 100000 <= 0:
            if message.chat.type == 'private':
                await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ üòü".format(message.from_user), parse_mode= 'Markdown')
            else:
                await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ üòü".format(message.from_user), parse_mode= 'Markdown')
        else:
            intz = int(db.get_money(message.from_user.id))
            db.set_money(message.from_user.id, intz - int(100000))
            db.set_bbb(message.from_user.id, "yes")
            db.set_kormlvl(message.from_user.id, 1)
            a = datetime.datetime.today().strftime("%d%H")
            db.set_time(message.from_user.id, a)
            if message.chat.type == 'private':
                await bot.send_message(message.from_user.id, "[" + db.get_nickname(message.from_user.id) +"](tg://user?id=" + str(message.from_user.id) + "), –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω –∑–∞–≤–æ–¥ –∑–∞ *100.000‚ÇΩ* üè≠".format(message.from_user), parse_mode= 'Markdown')
            else:
                await bot.send_message(message.chat.id, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω –∑–∞–≤–æ–¥ –∑–∞ *100.000‚ÇΩ* üè≠".format(message.from_user), parse_mode= 'Markdown')

            

@dp.callback_query_handler(text="btnRandom")
async def randomize(message: types.Message):
    try:
        if db.get_time(message.from_user.id) == datetime.datetime.today().strftime("%d%H"):
                await bot.send_message(savedid, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –£ –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–µ–Ω—ã —á–∞—Å—ã! üè≠".format(message.from_user), parse_mode= 'Markdown')
        else:
            offz = int(db.get_kormlvl(message.from_user.id)) * 4.2321 * 2
            offic = int(offz) * asdas
            ofzzzz = int(offic) * int(db.get_kurs(ADMIN_ID))
            ofzzz = int(db.get_money(message.from_user.id)) + int(ofzzzz)
            db.set_money(message.from_user.id, int(ofzzz))
            db.set_time(message.from_user.id, datetime.datetime.today().strftime("%d%H"))
            await bot.answer_callback_query(message.id, text='–£—Å–ø–µ—à–Ω–æ ‚úÖ', show_alert=False)
            await bot.send_message(savedid, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –£—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç–æ *" + str(offic) + "‡∏ø* –∫–æ—Ä–º–∞ –∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤ *" + str(ofzzzz) + "‚ÇΩ* c –∫—É—Ä—Å–æ–º *" + str(db.get_kurs(ADMIN_ID)) + "‡∏ø* üè≠".format(message.from_user), parse_mode= 'Markdown')
    except:
            await bot.answer_callback_query(message.id, text='–≠—Ç–æ –Ω–µ –≤–∞—à –∑–∞–≤–æ–¥ ‚ùå', show_alert=False)

@dp.callback_query_handler(text="btnRandom2")
async def randomize(message: types.Message):
        try:
            if int(db.get_money(message.from_user.id)) - int(db.get_sum(message.from_user.id)) <= -1:
                await bot.send_message(savedid, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞–≤–æ–¥ - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üè≠\n–¶–µ–Ω–∞ –∑–∞–≤–æ–¥–∞: *" + str(db.get_sum(message.from_user.id)) + "‚ÇΩ*".format(message.from_user), parse_mode= 'Markdown')
            else:
                    money = int(db.get_money(message.from_user.id)) - int(db.get_sum(message.from_user.id))
                    db.set_money(message.from_user.id, money)
                    saved = db.get_sum(message.from_user.id)
                    bank = int(db.get_sum(message.from_user.id)) * 1.4
                    db.set_sum(message.from_user.id, int(bank))
                    sumzas = int(db.get_kormlvl(message.from_user.id)) + 1
                    db.set_kormlvl(message.from_user.id, int(sumzas))
                    bank = int(bank)
                    bank = str(bank).replace(".0", "")
                    bank = int(bank)
                    await bot.answer_callback_query(message.id, text='–£—Å–ø–µ—à–Ω–æ ‚úÖ', show_alert=False)
                    await bot.send_message(savedid, "[" + db.get_nickname(message.from_user.id)  +"](tg://user?id=" + str(message.from_user.id) + "), –£—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω –∑–∞–≤–æ–¥ –∑–∞ *" + str(saved) + "‚ÇΩ* üè≠\n–¶–µ–Ω–∞ –°–ª–µ–¥.–ó–∞–≤–æ–¥–∞: *" + str(bank) + "‚ÇΩ*".format(message.from_user), parse_mode= 'Markdown')
        except:
            await bot.answer_callback_query(message.id, text='–≠—Ç–æ –Ω–µ –≤–∞—à –∑–∞–≤–æ–¥ ‚ùå', show_alert=False)


if __name__ == "__main__":
    try:
        print("Trying polling server...")
        executor.start_polling(dp, skip_updates = True)
    except Exception as e:
        print('Error run polling, info ->\n' + str(e))
        exit
